//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Character/Player/Input/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""2be9ff37-5d1a-4c43-862a-ca4b5efd726a"",
            ""actions"": [
                {
                    ""name"": ""SwitchToBullet0"",
                    ""type"": ""Button"",
                    ""id"": ""5539db96-85d3-415a-8474-7edc018a3560"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToBullet1"",
                    ""type"": ""Button"",
                    ""id"": ""b1f85383-883f-4c0b-ab6d-e728aeab74d4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToBullet2"",
                    ""type"": ""Button"",
                    ""id"": ""a3b920ec-7982-4041-ac89-5bde32099a6b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToBullet3"",
                    ""type"": ""Button"",
                    ""id"": ""a5df0eaa-2722-4c4e-bd5a-111001ab7319"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToBullet4"",
                    ""type"": ""Button"",
                    ""id"": ""f16b19ce-214e-43f4-9c98-23aa6f820de1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""33aabd54-7a65-4cd4-8faa-16e3f61882e4"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77acac75-da62-42f6-b1e0-29568f4d9770"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c5f76a0-bec6-45c0-819e-f284a003e6ad"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb2155e2-1560-418b-9963-763192d2b1ce"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba3e9a44-4069-4164-8690-e6ce44220cf7"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3c5e999-fbe4-4eef-b233-e497555e692a"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9153661-7fd1-4a53-9a02-87df6108ca65"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22e75b30-bbe1-43b0-8918-711b2809eaab"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be3f6277-95d6-4391-b77c-5020710a8cfb"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71dcaf80-c57e-4677-a4de-bcaeac69dd19"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToBullet0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PlayerKeyboard"",
            ""bindingGroup"": ""PlayerKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_SwitchToBullet0 = m_Player.FindAction("SwitchToBullet0", throwIfNotFound: true);
        m_Player_SwitchToBullet1 = m_Player.FindAction("SwitchToBullet1", throwIfNotFound: true);
        m_Player_SwitchToBullet2 = m_Player.FindAction("SwitchToBullet2", throwIfNotFound: true);
        m_Player_SwitchToBullet3 = m_Player.FindAction("SwitchToBullet3", throwIfNotFound: true);
        m_Player_SwitchToBullet4 = m_Player.FindAction("SwitchToBullet4", throwIfNotFound: true);
    }

    ~@InputSystem()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, InputSystem.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_SwitchToBullet0;
    private readonly InputAction m_Player_SwitchToBullet1;
    private readonly InputAction m_Player_SwitchToBullet2;
    private readonly InputAction m_Player_SwitchToBullet3;
    private readonly InputAction m_Player_SwitchToBullet4;
    public struct PlayerActions
    {
        private @InputSystem m_Wrapper;
        public PlayerActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @SwitchToBullet0 => m_Wrapper.m_Player_SwitchToBullet0;
        public InputAction @SwitchToBullet1 => m_Wrapper.m_Player_SwitchToBullet1;
        public InputAction @SwitchToBullet2 => m_Wrapper.m_Player_SwitchToBullet2;
        public InputAction @SwitchToBullet3 => m_Wrapper.m_Player_SwitchToBullet3;
        public InputAction @SwitchToBullet4 => m_Wrapper.m_Player_SwitchToBullet4;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @SwitchToBullet0.started += instance.OnSwitchToBullet0;
            @SwitchToBullet0.performed += instance.OnSwitchToBullet0;
            @SwitchToBullet0.canceled += instance.OnSwitchToBullet0;
            @SwitchToBullet1.started += instance.OnSwitchToBullet1;
            @SwitchToBullet1.performed += instance.OnSwitchToBullet1;
            @SwitchToBullet1.canceled += instance.OnSwitchToBullet1;
            @SwitchToBullet2.started += instance.OnSwitchToBullet2;
            @SwitchToBullet2.performed += instance.OnSwitchToBullet2;
            @SwitchToBullet2.canceled += instance.OnSwitchToBullet2;
            @SwitchToBullet3.started += instance.OnSwitchToBullet3;
            @SwitchToBullet3.performed += instance.OnSwitchToBullet3;
            @SwitchToBullet3.canceled += instance.OnSwitchToBullet3;
            @SwitchToBullet4.started += instance.OnSwitchToBullet4;
            @SwitchToBullet4.performed += instance.OnSwitchToBullet4;
            @SwitchToBullet4.canceled += instance.OnSwitchToBullet4;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @SwitchToBullet0.started -= instance.OnSwitchToBullet0;
            @SwitchToBullet0.performed -= instance.OnSwitchToBullet0;
            @SwitchToBullet0.canceled -= instance.OnSwitchToBullet0;
            @SwitchToBullet1.started -= instance.OnSwitchToBullet1;
            @SwitchToBullet1.performed -= instance.OnSwitchToBullet1;
            @SwitchToBullet1.canceled -= instance.OnSwitchToBullet1;
            @SwitchToBullet2.started -= instance.OnSwitchToBullet2;
            @SwitchToBullet2.performed -= instance.OnSwitchToBullet2;
            @SwitchToBullet2.canceled -= instance.OnSwitchToBullet2;
            @SwitchToBullet3.started -= instance.OnSwitchToBullet3;
            @SwitchToBullet3.performed -= instance.OnSwitchToBullet3;
            @SwitchToBullet3.canceled -= instance.OnSwitchToBullet3;
            @SwitchToBullet4.started -= instance.OnSwitchToBullet4;
            @SwitchToBullet4.performed -= instance.OnSwitchToBullet4;
            @SwitchToBullet4.canceled -= instance.OnSwitchToBullet4;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_PlayerKeyboardSchemeIndex = -1;
    public InputControlScheme PlayerKeyboardScheme
    {
        get
        {
            if (m_PlayerKeyboardSchemeIndex == -1) m_PlayerKeyboardSchemeIndex = asset.FindControlSchemeIndex("PlayerKeyboard");
            return asset.controlSchemes[m_PlayerKeyboardSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnSwitchToBullet0(InputAction.CallbackContext context);
        void OnSwitchToBullet1(InputAction.CallbackContext context);
        void OnSwitchToBullet2(InputAction.CallbackContext context);
        void OnSwitchToBullet3(InputAction.CallbackContext context);
        void OnSwitchToBullet4(InputAction.CallbackContext context);
    }
}
